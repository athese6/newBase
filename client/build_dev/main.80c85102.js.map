{"version":3,"file":"main.80c85102.js","sources":["/Users/Henry/workspace/xoxo2/client/config/polyfills.js","webpack:///./node_modules/materialize-css/dist/css/materialize.min.css?0069","webpack:///./src/App.css?966a","/Users/Henry/workspace/xoxo2/client/src/App.js","webpack:///./src/index.css?781e","/Users/Henry/workspace/xoxo2/client/src/index.js","/Users/Henry/workspace/xoxo2/client/src/store/appReducer.js","/Users/Henry/workspace/xoxo2/client/src/store/configureStore.js"],"sourcesContent":["'use strict';\n\nif (typeof Promise === 'undefined') {\n    // Rejection tracking prevents a common issue where React gets into an\n    // inconsistent state due to an error, but it gets swallowed by a Promise,\n    // and the user has no idea what causes React's erratic future behavior.\n    require('promise/lib/rejection-tracking').enable();\n    window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\nif (process.env.NODE_ENV === 'test') {\n    require('raf').polyfill(global);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/polyfills.js\n// module id = ./config/polyfills.js\n// module chunks = 1","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/materialize-css/dist/css/materialize.min.css\n// module id = ./node_modules/materialize-css/dist/css/materialize.min.css\n// module chunks = 1","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.css\n// module id = ./src/App.css\n// module chunks = 1","import React, {Component} from 'react';\nimport Loadable from 'react-loadable';\nimport {connect} from 'react-redux';\nimport {setMessage} from './store/appReducer';\nimport autobind from 'autobind-decorator';\n// import logo from './logo.svg';\nimport styled from 'styled-components';\nimport './App.css';\n\n\nconst Button = styled.button.attrs({\n    className: props => props.className\n})`\n\n`;\n\nconst AsyncComponent = Loadable({\n    loader: () => import(/* webpackChunkName: \"myNamedChunk\" */ './SomeComponent'),\n    loading: () => <div>loading...</div>,\n    modules: ['myNamedChunk'],\n});\n\nclass App extends Component {\n\n    state = {\n        response: ''\n    };\n\n    componentDidMount() {\n        this.callApi()\n            .then(res => this.setState({response: res.express}))\n            .catch(err => console.log(err));\n        if (!this.props.message) {\n            this.props.updateMessage(\"Hi, I'm from client!\");\n        }\n    }\n\n    callApi = async () => {\n        const response = await fetch('/api/hello');\n        const body = await response.json();\n\n        if (response.status !== 200) throw Error(body.message);\n\n        return body;\n    };\n\n    @autobind\n    test(event) {\n        console.log(\"teasfsfsf\");\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <img src=\"./logo.svg\" className=\"App-logo\" alt=\"logo\"/>\n                    <h1 className=\"App-title\">Welcome to React</h1>\n                </header>\n                <p className=\"App-intro\">\n                    To get started, edit <code>src/App.js</code> and save to reload.\n                </p>\n                <p className=\"App-intro\">{this.state.response}</p>\n                <p className=\"App-intro\">{process.env.REACT_APP_CLIENT_TYPE + \": \" + process.env.NODE_ENV}</p>\n                <div className=\"App-intro\">\n                    <AsyncComponent/>\n                    <p>\n                        Redux: {this.props.message}\n                    </p>\n                </div>\n                <Button className={\"waves-effect waves-light btn\"} onClick={this.test}>{\"버튼\"}</Button>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    ({app}) => ({\n        message: app.message,\n    }),\n    dispatch => ({\n        updateMessage: (messageText) => dispatch(setMessage(messageText)),\n    })\n)(App);\n\n\n\n// WEBPACK FOOTER //\n// src/App.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.css\n// module id = ./src/index.css\n// module chunks = 1","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Loadable from 'react-loadable';\nimport {Provider as ReduxProvider} from 'react-redux'\n\nimport 'materialize-css/dist/js/materialize.min.js'\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './index.css';\nimport App from './App';\nimport configureStore from './store/configureStore';\n// import registerServiceWorker from './registerServiceWorker';\n\nconst store = configureStore(window.__REDUX_STATE__ || {});\n\nconst AppBundle = (\n    <ReduxProvider store={store}>\n        <App/>\n    </ReduxProvider>\n);\n\n// window.onload = () => {\n//     Loadable.preloadReady().then(() => {\n//         // ReactDOM.hydrate(  this is for ssr\n//         ReactDOM.render(\n//             AppBundle,\n//             document.getElementById('root')\n//         );\n//     });\n// };\n\nconst root = document.querySelector('#root');\nReactDOM.render(AppBundle, root);\n\n\n// registerServiceWorker();\n\n\n\n// WEBPACK FOOTER //\n// src/index.js","const initialState = {\n    message: null,\n};\n\nexport const appReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case 'SET_MESSAGE':\n            return {\n                ...state,\n                message: action.message,\n            };\n        default:\n            return state;\n    }\n};\n\nexport const setMessage = messageText => ({ type: 'SET_MESSAGE', message: messageText });\n\nexport const setAsyncMessage = messageText => dispatch => (\n    new Promise((resolve, reject) => {\n        setTimeout(() => resolve(), 2000);\n    })\n        .then(() => dispatch(setMessage(messageText)))\n);\n\n\n\n// WEBPACK FOOTER //\n// src/store/appReducer.js","import {\n    createStore,\n    combineReducers,\n    compose,\n    applyMiddleware,\n} from 'redux';\nimport {createLogger} from 'redux-logger';\nimport ReduxThunk from 'redux-thunk'\nimport {appReducer} from './appReducer';\n\nconst middleWare = [];\n\nmiddleWare.push(ReduxThunk);\n\nconst loggerMiddleware = createLogger({\n    predicate: () => process.env.NODE_ENV === 'development',\n});\nmiddleWare.push(loggerMiddleware);\n\n// if you're also using redux-thunk, add it as a middleware\nconst createStoreWithMiddleware = compose(applyMiddleware(...middleWare))(createStore);\n\nconst rootReducer = combineReducers({\n    app: appReducer,\n});\n\nexport default function configureStore(initialState = {}) {\n    return createStoreWithMiddleware(rootReducer, initialState);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/store/configureStore.js"],"mappings":"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","sourceRoot":""}